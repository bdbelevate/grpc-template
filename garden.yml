{% assign name = crate_name | remove: "_service" %}{% assign plural_name = name | append: "s" %}{% assign pascal = name | pascal_case %}
kind: Module
description: mongodb persistent volume
type: persistentvolumeclaim
name: {{project-name}}-db-storage
include: []
spec:
  accessModes: ${var.volumeAccessModes}
  storageClassName: standard
  resources:
    requests:
      storage: 1Gi
---
kind: Module
description: mongodb server
type: container
name: {{project-name}}-db
image: mongo:4.0
include: []
services:
  - name: {{project-name}}-db
    dependencies: ["{{project-name}}-db-storage"]
    replicas: 1
    volumes:
      - name: {{project-name}}-db-storage
        module: {{project-name}}-db-storage
        containerPath: /data/db
    ports:
      - name: mongo
        protocol: TCP
        containerPort: 27017
---
kind: Module
description: The {{project-name}} service source image
name: {{ project-name }}
type: container
hotReload:
  sync:
    - source: src
      target: /app/src
    - source: proto
      target: /app/proto
exclude: ["mongo", "target", ".trigger", ".garden"]
services:
  - name: {{project-name}}
    dependencies: ["{{project-name}}-db"]
    annotations:
      getambassador.io/config: |
        ---
        apiVersion: ambassador/v2
        kind: Mapping
        name: {{project-name}}-mapping
        grpc: True
        prefix: /cosm.{{name | downcase}}.{{pascal}}/
        rewrite: /cosm.{{name | downcase}}.{{pascal}}/
        service: {{project-name}}.cosm-services-${environment.namespace}:10000
    env:
      MONGO_URL: mongodb://{{project-name}}-db:27017/
      MONGO_DB_NAME: {{ project-name }}
      RUST_LOG: debug
    ports:
      - name: grpc
        protocol: TCP
        containerPort: 10000
