{% assign name = crate_name | remove: "service" %}
{% assign pascal = name | pascal_case %}
syntax = "proto3";
package cosm.{{name}};

import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";

message Timestamp {
    // Represents seconds of UTC time since Unix epoch
    // 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
    // 9999-12-31T23:59:59Z inclusive.
    int64 seconds = 1;

    // Non-negative fractions of a second at nanosecond resolution. Negative
    // second values with fractions must still have non-negative nanos values
    // that count forward in time. Must be from 0 to 999,999,999
    // inclusive.
    int32 nanos = 2;
}

// service definitions
service {{pascal}}Service {
    rpc Create{{pascal}}({{pascal}}) returns ({{pascal}});
    rpc Get{{pascal}}(Get{{pascal}}Request) returns ({{pascal}});
    rpc List{{pascal}}s(List{{pascal}}sRequest) returns (stream {{pascal}});
    rpc Update{{pascal}}(Update{{pascal}}Request) returns ({{pascal}});
    rpc Delete{{pascal}}(Delete{{pascal}}Request) returns (google.protobuf.Empty);
}

// organization request messages
message Get{{pascal}}Request {
    string id = 1;
}

message List{{pascal}}sRequest {
    enum OrderBy {
        DEFAULT = 0;
        NAME = 1;
        CREATED_AT = 2;
    }
    OrderBy order_by = 1;
    int32 start = 2;
    int32 limit = 3;
}

message Update{{pascal}}Request {
    string id = 1;
    string name = 2;
    string description = 3;

    google.protobuf.FieldMask mask = 4;
}

message Delete{{pascal}}Request {
    string id = 1;
}

// response messages
message {{pascal}}  {
    string id = 1;
    string name = 2;
    string description = 3;

    Timestamp created_at = 4;
}
